3.1.11
1. Using the value -35, write it as an integer literal in decimal, hexadecimal, octal, and binary formats that are consistent with
    MASM syntax.
    -35d, DDh, 335o, 11011101b
2. (Yes/No):Is A5h a valid hexadecimal literal?
    No, a leading zero is required.
3. (Yes/No):Does the multiplication operation (*) have a higher precedence than the division operator (/) in integer expressions?
    No, they have the same precedence.
4. Create a single integer expression that uses all the operators from Section 3.1.2. Calculate the value of the expression.
    Expression: 30 MOD (3 * 4) + (3 â€“ 1) / 2 = 20

3.2.4
4. In the AddTwo program, which register holds the sum?
    EAX
5. In the AddTwo program, which statement halts the program?
    INVOKE ExitProcess,0.

3.3.3
1. What type of files are produced by the assembler?
    Object (.OBJ) and listing (.LST) files
2. (True/False):The linker extracts assembled procedures from the link library and inserts them in the executable program.
    True
3. (True/False):When a program's source code is modified, it must be assembled and linked again before it can be executed with the change.
    True
4. Which operating system component reads and executes programs?
    Loader

3.4.13
1. Create an uninitialized data declaration for a 16-bit signed integer.
    var1 SWORD ?
2. Create an uninitialized data declaration for an 8-bit unsigned integer.
    var2 BYTE ?
3. Create an uninitialized data declaration for an 8-bit signed integer.
    var3 SBYTE ?
4. Create an uninitialized data declaration for a 64-bit integer.
    var4 QWORD ?
5. Which data type can hold a 32-bit signed integer?
    SDWORD

3.5.5
3. Write a statement that causes the assembler to calculate the number of bytes in the following array, and assign the value to a
    symbolic constant named ArraySize:
              myArray WORD 20 DUP(?)
        ArraySize = ($ - myArray)

3.9.1
4. Explain why the term assembler language is not quite correct.
    
5. Explain the difference between big endian and little endian. Also, look up the origins of the term on the Web.

6. Why might you use a symbolic constant rather than an integer literal in your code?

25. Which data directive creates a 32-bit signed integer variable?

3.9.2
4. Find out if you can declare a variable of type DWORD and assign it a negative value. What does this tell you about the assembler's
    type checking?

7. Declare an array of 120 uninitialized unsigned doubleword values.

13. Declare a string variable containing the word "TEST" repeated 500 times.

3.10
3. Write a program that contains a defintion of each data type listed in Table 3-2 in Section 3.4 (p.74). Initialize each variable
    to a value that is consistent with its data type.

